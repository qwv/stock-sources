#!/usr/bin/env python

import argparse
import os


def ls_filter(name):
    return name.endswith('.gz') or name.endswith('.md') or name.startswith('20')


def generate_html(items, f):
    f.write('<html><body>\n')
    for item in items:
        f.write('<a href="%s">%s</a><br>\n' % (item, item))
    f.write('</body></html>')


def generate_txt(items, f):
    for item in items:
        f.write(item + '\n')


def main():
    parser = argparse.ArgumentParser(description='Generate index pages.')
    parser.add_argument('directory', metavar='D', type=str, nargs=1,
                        help='target directory')
    parser.add_argument('--html', dest='html', action='store_true',
                        help='generate index.html')
    parser.add_argument('--txt', dest='txt', action='store_true',
                        help='generate index.txt')
    args = parser.parse_args()

    path = args.directory[0]
    if not os.path.exists(path):
        print 'Paht does not exist: %s' % path
        return

    items = os.listdir(path)
    items = sorted(filter(ls_filter, items))

    if args.html:
        filename = os.path.join(path, 'index.html')
        print 'Generating %s' % filename
        with open(filename, 'w') as f:
            generate_html(items, f)

    if args.txt:
        filename = os.path.join(path, 'index.txt')
        print 'Generating %s' % filename
        with open(filename, 'w') as f:
            generate_txt(items, f)


if __name__ == '__main__':
    main()
